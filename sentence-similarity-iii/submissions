https://leetcode.com/problems/sentence-similarity-iii/description/

Two-Pointer Approach:  Time-complexity:O(N)  Space-complexity:O(N)
class Solution {
    public boolean areSentencesSimilar(String sentence1, String sentence2) {
        String[] str1=sentence1.split(" ");
        String[] str2=sentence2.split(" ");

        if(str1.length<str2.length){
            String[] temp=str1;
            str1=str2;
            str2=temp;
        }
         int s1=str1.length;
        int s2=str2.length;

        int start=0;
        int end=0;

        while(start<s2 && str1[start].equals(str2[start])){
            start++;
        }

        while(end<s2 && str1[s1-end-1].equals(str2[s2-end-1])){
            end++;
        }

        return start+end>=s2;
    }
}
