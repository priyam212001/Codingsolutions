https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference/description/

class Solution {
    public int minimumDifference(int[] nums) {
        int sum = 0;
        for(int a : nums) sum += a;
        int ans[] = new int[1];
        ans[0] = Integer.MAX_VALUE;

        solve(nums.length - 1, 0, nums.length/2, sum, ans, nums);

        return ans[0];
    }

    public static void solve(int idx, int sum, int len, int total, int[] ans, int[] arr){

        if(len == 0){
            ans[0] = Math.min(ans[0], Math.abs(total - 2*sum));
            return;
        }

        if(idx == 0) return;
        
        solve(idx-1, sum + arr[idx], len-1, total, ans, arr);

        solve(idx-1, sum, len, total, ans, arr);
    }
}

