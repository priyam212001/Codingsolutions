https://leetcode.com/problems/rotate-array/

Time-complexity:O(N)  Space-complexity:O(N)
class Solution {
    public void rotate(int[] nums, int k) {
        int n=nums.length;
        if(k>n){
            k=k%n;
        }
        int diff=n-k;
        if(n>=2){
        int[] ans=new int[n];
        int j=0;
        for(int i=diff;i<n;i++){
          ans[j]=nums[i];
          j++;
        }

        for(int i=0;i<diff;i++){
            ans[j]=nums[i];
            j++;
        }
        
        for(int i=0;i<n;i++){
            nums[i]=ans[i];
        }
        }
    }
}

Time-complexity:O(N)  Space-complexity:O(1)
class Solution {
    public void rotate(int[] nums, int k) {
       k%=nums.length;

       reverse(nums,0,nums.length-1);
       reverse(nums,0,k-1);
       reverse(nums,k,nums.length-1);

    }
    private void reverse(int[] nums, int left, int right){
        while(left<right){
            int temp=nums[left];
            nums[left]=nums[right];
            nums[right]=temp;
            left++;
            right--;
        }
    }
}
