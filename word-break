https://leetcode.com/problems/word-break/description/

import java.util.*;

class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> wordset = new HashSet<>(wordDict);
        int max = 0;
        for (String word : wordset) {
            max = Math.max(max, word.length());
        }

        int n = s.length();
        boolean dp[] = new boolean[n + 1];
        dp[0] = true;

        for (int i = 1; i <= n; i++) {
            for (int j = i - 1; j >= Math.max(0, i - max); j--) {
                if (dp[j] && wordset.contains(s.substring(j, i))) { // Corrected substring(j, i)
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp[n];
    }
}
