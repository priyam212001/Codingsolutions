https://leetcode.com/problems/heaters/description/

Time-complexity:O(nlogm)
class Solution {
    public int findRadius(int[] houses, int[] heaters) {
        int max=0;
        Arrays.sort(houses);
        Arrays.sort(heaters);

        for(int i=0;i<houses.length;i++){
            if(heaters.length==1){
                max=Math.max(max,Math.abs(houses[i]-heaters[0]));
            }
            else{
                int closest=Findclosest(houses[i],heaters);
                max=Math.max(max,closest);
            }
           
        }

        return max;
    }

    public static int Findclosest(int num,int[] heaters){
        
        int start=0,end=heaters.length-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(heaters[mid]==num){
                return 0;
            }
            else if(heaters[mid]>num){
                end=mid-1;
            }
            else{
                start=mid+1;
            }
        }

    int left=Integer.MAX_VALUE;
    if(end>=0){
     left=Math.abs(num-heaters[end]);
    }
    int right=Integer.MAX_VALUE;
    if(start<heaters.length){
     right=Math.abs(num-heaters[start]);
    }


       return Math.min(left,right);
    }
}


