https://leetcode.com/problems/linked-list-cycle/description/

Slow and Fast Pointer:  Time-complexity:O(N)  Space-complexity:O(1)
public class Solution {
    public boolean hasCycle(ListNode head) {
        ListNode fast=head;
        ListNode slow=head;

        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
            if(slow==fast){
                return true;
            }
        }

        return false;
    }
}
