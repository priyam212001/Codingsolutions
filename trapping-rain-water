https://leetcode.com/problems/trapping-rain-water/description/
Time-complexity:O(N)  Space-complexity:O(N)

class Solution {
    public int trap(int[] height) {
        int left[]=maxleft(height);
        int right[]=maxright(height);

        int total=0;
        for(int i=0;i<height.length;i++){
            total+=Math.min(left[i],right[i])-height[i];
        }
        return total;
    }
    public int[] maxleft(int height[]){
        int n=height.length;
       int left[]=new int[height.length];
       
       int max=0;
       for(int i=0;i<n;i++){
        max=Math.max(max,height[i]);
        left[i]=max;
       }
       return left;
    }
     public int[] maxright(int height[]){
          int n=height.length;
       int right[]=new int[height.length];
       int max=0;
       for(int i=n-1;i>=0;i--){
        max=Math.max(max,height[i]);
        right[i]=max;
       }
       return right;
    }
}
